{"version":3,"sources":["firebase.js","Nav.js","axios.js","Request.js","Banner.js","Row.js","screens/HomeScreen.js","features/userSlice.js","screens/SignUpScreen.js","screens/LoginScreen.js","screens/ProfileScreen.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Nav","useState","navAnima","setNavAnima","history","useHistory","AnimationHandler","window","scrollY","useEffect","addEventListener","removeEventListener","className","onClick","push","src","alt","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchScienceFrictionMovies","fetchDocumentaries","Banner","movie","setMovie","trailerUrl","setTrailerUrl","a","get","requestOrigi","data","results","Math","floor","random","length","fetchMovie","string","n","console","log","backdrop_path","style","backgroundSize","backgroundPosition","backgroundImage","name","original_name","title","singleData","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","overview","substr","paddingTop","videoId","opts","height","width","alignItems","playerVars","autoplay","Row","fetchUrl","isLargeRow","map","poster_path","handleSubmit","id","HomeScreen","userSlice","createSlice","initialState","user","status","reducers","login","state","action","payload","logout","actions","selectUser","SignUpScreen","useSelector","email","setEmail","password","setPassword","type","value","onChange","e","target","placeholder","preventDefault","signInWithEmailAndPassword","loginUser","toast","message","createUserWithEmailAndPassword","userAuth","screen","errorCode","code","errorMessage","LoginScreen","signIn","setSignIn","ProfileScreen","signOut","App","dispatch","useDispatch","unSubscribe","onAuthStateChanged","uid","path","store","configureStore","reducer","userReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24ca105a.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDEFm05584E2EQFN3aLQlBza3QvXmd2vac\",\r\n    authDomain: \"netflix-clone-dca4d.firebaseapp.com\",\r\n    projectId: \"netflix-clone-dca4d\",\r\n    storageBucket: \"netflix-clone-dca4d.appspot.com\",\r\n    messagingSenderId: \"697829610453\",\r\n    appId: \"1:697829610453:web:8b3b37bade6d6bb3cba35c\",\r\n    measurementId: \"G-MZC3ST0VBP\"\r\n};\r\n\r\nconst firebaseapp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseapp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { auth };\r\nexport default db;\r\n\r\n","import React,{ useState, useEffect } from 'react'\r\nimport './Nav.css'\r\nimport { FaUserCircle } from 'react-icons/fa';\r\nimport {auth} from './firebase';\r\nimport { useHistory  } from \"react-router-dom\";\r\n\r\n\r\nconst Nav = () => {\r\n   const [navAnima, setNavAnima] = useState(false); \r\n   const history = useHistory();\r\n\r\n   const AnimationHandler = () => { \r\n      if(window.scrollY >100){\r\n        setNavAnima(true);\r\n      }\r\n      else{\r\n        setNavAnima(false);\r\n      }\r\n    };\r\n    \r\n   useEffect( ()=> {\r\n           window.addEventListener('scroll', AnimationHandler);\r\n       return () => {\r\n           window.removeEventListener('scroll', AnimationHandler);\r\n        }\r\n     },[]);\r\n\r\n\r\n    return (\r\n      <>\r\n      <div className={`nav ${ navAnima && 'nav__black'}`}>\r\n         <div className=\"nav__contents\">\r\n            <img onClick={()=>history.push(\"/\")} className=\"float-start nav__logo\" src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"netflix brand logo\"/>\r\n        \r\n            <FaUserCircle onClick={()=>history.push(\"/profile\")} className=\"text-light float-end rounded nav__avatar\"/>\r\n        \r\n         </div>\r\n      </div>\r\n     </>\r\n    )\r\n}\r\nexport default Nav;\r\n\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;\r\n\r\n\r\n{/*7d161198e8f9b89da5beb6851bbeda63*/}\r\n\r\n// //https://api.themoviedb.org/3/ trending/all/week?api_key=7d161198e8f9b89da5beb6851bbeda63&language=en-US\r\n","const API_KEY = \"7d161198e8f9b89da5beb6851bbeda63\";\r\n\r\nconst requests = {\r\n   fetchTrending : `/trending/all/week?api_key=${API_KEY}&language=en-US`,// Main banner\r\n   fetchNetflixOriginals : `/discover/tv?api_key=${API_KEY}&with_networks=213`, \r\n   fetchTopRated : `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n   fetchActionMovies : `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n   fetchComedyMovies : `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n   fetchHorrorMovies : `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n   fetchScienceFrictionMovies : `/discover/movie?api_key=${API_KEY}&with_genres=878`,\r\n   fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n};\r\n\r\nexport default requests;\r\n\r\n//https://api.themoviedb.org/3/discover/tv?api_key=7d161198e8f9b89da5beb6851bbeda63&with_networks=213\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Banner.css';\r\n\r\nimport axios from './axios';\r\nimport requests from './Request';\r\n\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\n\r\nconst Banner = () => {\r\n    const[movie, setMovie] = useState([]);\r\n    const[trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n\r\n    useEffect( ()=>{\r\n        const fetchMovie = async () => {\r\n            const requestOrigi = await axios.get(requests.fetchTrending);\r\n           // console.log(\"Banner\",requestOrigi.data.results.length);\r\n\r\n            setMovie(requestOrigi.data.results[\r\n                Math.floor(Math.random() * requestOrigi.data.results.length-1)\r\n            ]);\r\n            return requestOrigi;\r\n        }\r\n        fetchMovie();\r\n\r\n    },[]); \r\n\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '640',\r\n        alignItems: 'center',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        },\r\n      };\r\n\r\n    const handleSubmit = (singleData) => {\r\n        if(trailerUrl) {\r\n            setTrailerUrl(\"\");\r\n        }\r\n        else {\r\n            movieTrailer(singleData || \"\")\r\n            .then( url => {\r\n                console.log(\"Youtube URL : \"+url);\r\n                //https://www.youtube.com/watch?v=KnBwHYAnbEw\r\n               // https://www.youtube.com/results?search_query=sweet+tooth\r\n                const urlParams =  new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl((urlParams.get(\"v\") || urlParams.get(\"query\")));\r\n            })\r\n            .catch( error => console.log(error));\r\n        }\r\n    }\r\n\r\n    console.log(\"Banner Movie\",movie?.backdrop_path);\r\n\r\n    function truncate(string, n) {\r\n        return string?.length > n ? string.substr(0, n-1) + \"....\" : string;\r\n    }\r\n    return (\r\n        <header className=\"banner\" style={{  \r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center center\",\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`}}>\r\n    \r\n            <div className={`banner__contents ${trailerUrl && 'fade__background' }`}>\r\n              <h1 className=\"banner__title\">{movie?.name || movie?.original_name || movie?.title }</h1>\r\n               <div className=\"banner__buttons\">\r\n                   <button className=\"banner__button\" onClick={()=>handleSubmit(movie?.name || movie?.original_name || movie?.title)}>Play</button>\r\n                   <button className=\"banner__button\">My List</button>\r\n               </div>\r\n              \r\n               <h1 className=\"banner__description\">\r\n                {\r\n                 truncate(movie?.overview,150)\r\n                }\r\n               </h1>\r\n              \r\n            </div>\r\n\r\n           \r\n            {trailerUrl && <YouTube className=\"mx-auto d-block align-items-start justify-content-center w-50\" style={{paddingTop: '-500px'}} videoId={trailerUrl} opts={opts}/>}\r\n            <div className=\"banner--fadeBottom\"/>\r\n        </header>\r\n    )\r\n}\r\nexport default Banner\r\n\r\n","import React,{ useState, useEffect } from 'react'\r\nimport axios from './axios';\r\nimport './Row.css';\r\n\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst baseURL = \"https://image.tmdb.org/t/p/original\";\r\n\r\nconst Row = ({title, fetchUrl, isLargeRow=false}) => {\r\n    const[movie, setMovie] = useState([]);\r\n    const[trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    useEffect( () => {\r\n        const fetchMovie = async () => {\r\n            const requestOrigi = await axios.get(fetchUrl);\r\n            console.log(\"Row\",requestOrigi.data.results);\r\n\r\n            setMovie(requestOrigi.data.results);\r\n            return requestOrigi;\r\n        }\r\n        fetchMovie();\r\n\r\n    },[fetchUrl]); \r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '640',\r\n        alignItems: 'center',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        },\r\n      };\r\n\r\n    const handleSubmit = (singleData) => {\r\n        if(trailerUrl) {\r\n            setTrailerUrl(\"\");\r\n        }\r\n        else {\r\n            movieTrailer(singleData?.name || singleData?.title || singleData?.original_name || \"\")\r\n            .then( url => {\r\n                console.log(\"Youtube URL : \"+url);\r\n                //https://www.youtube.com/watch?v=KnBwHYAnbEw\r\n               // https://www.youtube.com/results?search_query=sweet+tooth\r\n                const urlParams =  new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl((urlParams.get(\"v\") || urlParams.get(\"query\")));\r\n            })\r\n            .catch( error => console.log(error));\r\n        }\r\n    }\r\n\r\n    console.log(\"Row Movie\",movie);\r\n\r\n    return (\r\n        <div className=\"row1\"> \r\n         <h2 className=\"text-light\">{title}</h2>\r\n            <div className=\"row__postersMain\"  >\r\n               {\r\n                movie.map( (singleData) => (\r\n                    (isLargeRow && singleData.poster_path) ||\r\n                    (!isLargeRow && singleData.backdrop_path)) && \r\n                      (\r\n                        <img \r\n                        onClick={()=>handleSubmit(singleData)}\r\n                        key={singleData.id}\r\n                        className={`row__poster ${isLargeRow && \"row__posterLarge\" }`} \r\n                        src={`${baseURL}${ isLargeRow ? singleData.poster_path : singleData.backdrop_path}`} \r\n                        alt={singleData.title} />\r\n                      )   \r\n                )\r\n               }\r\n            </div>\r\n            \r\n             {trailerUrl && <YouTube className=\"mx-auto d-block w-100\" videoId={trailerUrl} opts={opts}/>}  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n\r\n","import React from 'react'\r\nimport './HomeScreen.css'\r\n\r\nimport Nav from '../Nav';\r\nimport Banner from '../Banner';\r\n\r\nimport requests from '../Request';\r\nimport Row from '../Row';\r\n\r\nconst HomeScreen = () => {\r\n    return (\r\n        <div className=\"homeScreen\">\r\n            {/*Nav*/}\r\n       \r\n             <Nav/>\r\n            {/*Banner*/}\r\n             <Banner/>\r\n              \r\n            {/*Row*/}\r\n             <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/> \r\n              \r\n             <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/> \r\n             <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/> \r\n             <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/> \r\n             <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/> \r\n             <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/> \r\n             <Row title=\"Science & Frictions Movies\" fetchUrl={requests.fetchScienceFrictionMovies}/> \r\n             <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;\r\n\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counter/counterAPI';\n\nconst initialState = {\n  user: null,\n  status: 'another state value',\n};\n \nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  // these are called actions\n  reducers: {\n     login : (state, action) =>  {\n        state.user = action.payload;\n        //console.log(\"userSlice\",state.user);\n      },\n     logout:(state) => {\n        state.user = null;\n      }\n  }, \n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user; \n                                   \nexport default userSlice.reducer;\n\n","import React, { useState, useEffect} from 'react';\r\nimport './SignUpScreen.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport {useHistory} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\n\r\nimport {auth} from '../firebase';\r\nimport db from '../firebase';\r\n\r\nconst SignUpScreen = () => {\r\n const user = useSelector(selectUser);\r\n \r\n const  history = useHistory();\r\n\r\n const[email, setEmail] = useState('');\r\n const[password, setPassword] = useState('');\r\n \r\n \r\n const register = (e) => {\r\n      e.preventDefault();\r\n      auth.createUserWithEmailAndPassword(email, password)\r\n      .then( (userAuth) => {\r\n          toast(\"Register Successfully!\",{type:'success'},userAuth);         \r\n          console.log(\"Register User: \",window.screen.width,userAuth); \r\n          \r\n      }) \r\n      .catch((error) => {\r\n          var errorCode = error.code;\r\n          var errorMessage = error.message;\r\n          console.log(\"Error Message is :\"+errorMessage+\"errorCode is :\"+errorCode);\r\n          toast(errorMessage,{type:'error'});\r\n          // ..\r\n      });\r\n}\r\n\r\n const signIn = (e) => {\r\n     e.preventDefault();\r\n     auth.signInWithEmailAndPassword(email, password)\r\n     .then( (loginUser) =>{\r\n         console.log(\"Login User Data\",loginUser);\r\n         toast(loginUser.user.email +\" You have successfully login!\",{type:'success'});  \r\n         \r\n     })\r\n     .catch( (error) => {\r\n         toast(error.message,{type:'warning'});\r\n         console.log(\"Login Error\",error);\r\n     });\r\n}\r\n\r\nuseEffect(()=>{\r\n    if(user?.email) {\r\n        return history.push(\"/\");\r\n    }\r\n});\r\n \r\n return(\r\n  <div className=\"SignUpScreen mt-0 mb-3 \">\r\n     <form>\r\n     <ToastContainer />\r\n       <h1 className=\"mb-3 pt-1  pb-2 float-start\">Sign In</h1>\r\n         <input type=\"email\" value={email} onChange={(e)=> setEmail(e.target.value)} placeholder=\"Email\" />\r\n         <input type=\"password\" value={password} onChange={(e)=> setPassword(e.target.value)} placeholder=\"password\" />\r\n         <button className=\"mt-4\" onClick={signIn}>Sign In</button>\r\n         <h5 className=\"mt-2\">\r\n            <span className=\"text-muted \">New to Netflix? </span>\r\n            <span className=\"signUp__link\" onClick={register}>Sign up now.</span>\r\n         </h5>\r\n     </form>      \r\n  </div>\r\n    )\r\n}\r\n\r\nexport default SignUpScreen;\r\n\r\n","import React, { useState } from 'react'\r\nimport './LoginScreen.css'\r\n\r\nimport SignUpScreen from './SignUpScreen';\r\n\r\nimport { MdKeyboardArrowRight } from 'react-icons/md';\r\n\r\nconst LoginScreen = () => {\r\n    const [signIn, setSignIn] = useState(false);\r\n    \r\n    return (\r\n    <div className=\"loginScreen \">\r\n     <div className=\"loginScreen__background\">\r\n       <img className=\"loginScreen__logo\" src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"\"/>     \r\n       <button className=\"loginScreen__button\" onClick={()=>setSignIn(true)}>Sign In</button>\r\n     </div>\r\n     \r\n     <div className=\"loginScreen__body container-fluid\">\r\n        { \r\n         signIn ? (<SignUpScreen/>) : (<>\r\n         <br/><br/>\r\n          <h1>Unlimited movies, TV shows and more.</h1>\r\n          <h2>Watch anywhere. Cancel anytime.</h2>\r\n          <h3>Ready to watch? Enter your email to create or restart your membership.</h3>\r\n            <div className=\"loginScreen__input m-3\">\r\n              <form>\r\n                  <input className=\"nfTextField \" type=\"email\" placeholder=\"Enter your email\" />\r\n                  <button className=\"get__started btn-red\" onClick={()=>setSignIn(true)}>Get Started<MdKeyboardArrowRight/></button>\r\n              </form>\r\n            </div>\r\n         </>)\r\n        }\r\n     </div>\r\n     <div className=\"loginScreen__gradient\" ></div>\r\n          \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\n\r\n","import React from 'react'\r\nimport './ProfileScreen.css'\r\nimport Nav from \"../Nav\";\r\nimport { ImUser } from 'react-icons/im';\r\nimport {useSelector} from \"react-redux\";\r\nimport { auth } from '../firebase';\r\n\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {selectUser} from '../features/userSlice';\r\n\r\nconst ProfileScreen = () => {\r\n    const user = useSelector(selectUser);\r\n    const history = useHistory();\r\n    return (\r\n        <div className=\"profileScreen\">\r\n            <Nav/>\r\n            <div className=\"profileScreen__body\">\r\n                <h2>User Profile</h2>\r\n                <div className=\"profileScreen__info\">\r\n                    <ImUser className=\"userLogo\"/>\r\n                    <div className=\"profileScreen__detail\">\r\n                        <h2>{user.email}</h2>\r\n                        <div className=\"profileScreen__plans\">\r\n                          {/*Our All plans*/}\r\n                           <h3>Plans</h3>\r\n                           \r\n                          {/*End Our All plans*/}\r\n                          <button onClick={()=>(auth.signOut(),history.push(\"/\"))} className=\"profileScreen__signout\">Sign Out</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React,{ useState, useEffect } from 'react';\n\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport ProfileScreen from './screens/ProfileScreen';\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport {auth} from './firebase';\nimport { useDispatch, useSelector  } from 'react-redux';\n\nimport './App.css';\nimport { login, logout, selectUser } from './features/userSlice';\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect( ()=> {\n    const unSubscribe =  auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        // User is signed in  \n        var loginUser = userAuth.email;\n        console.log(\"App User Login\",loginUser);\n\n        dispatch(login({\n          uid : userAuth.uid,\n          email : userAuth.email\n        }));\n         \n      } else {\n        // User is signed out\n        dispatch(logout())\n      }\n    });\n    \n    // cleanup funtion(when component will unmount we don't need to duplicate value)\n   return () => {\n    unSubscribe();\n   }\n\n  },[]);\n\n  \n  return (\n    <div className=\"app\">\n      {\n       !user ? (\n        <LoginScreen />\n       ) : (\n       <Router>\n         <Switch> \n          \n           <Route path=\"/profile\">\n               <ProfileScreen/>\n           </Route>\n           <Route path=\"/\">\n              <HomeScreen/>\n           </Route>\n         </Switch>\n       </Router> \n       )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}